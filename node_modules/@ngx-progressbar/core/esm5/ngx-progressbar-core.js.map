{
  "version": 3,
  "file": "ngx-progressbar-core.js",
  "sources": [
    "ng://@ngx-progressbar/core/src/ng-progress.module.ts",
    "ng://@ngx-progressbar/core/src/components/ng-progress/ng-progress.component.ts",
    "ng://@ngx-progressbar/core/src/components/ng-progress-bar/ng-progress-bar.component.ts",
    "ng://@ngx-progressbar/core/src/services/ng-progress.service.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgProgressBarComponent } from './components/ng-progress-bar/ng-progress-bar.component';\r\nimport { NgProgressComponent } from './components/ng-progress/ng-progress.component';\r\nimport { NgProgress } from './services/ng-progress.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgProgressComponent,\r\n    NgProgressBarComponent\r\n  ],\r\n  exports: [NgProgressComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class NgProgressModule {\r\n  static forRoot() {\r\n    return {\r\n      ngModule: NgProgressModule,\r\n      providers: [NgProgress]\r\n    };\r\n  }\r\n}\r\n",
    "import { Component, Input, ChangeDetectionStrategy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgProgress } from '../../services/ng-progress.service';\r\n\r\n@Component({\r\n  selector: 'ng-progress',\r\n  template: `<ng-progress-bar\r\n    [speed]=\"speed\"\r\n    [ease]=\"ease\"\r\n    [meteor]=\"meteor\"\r\n    [spinner]=\"spinner\"\r\n    [spinnerPosition]=\"spinnerPosition\"\r\n    [direction]=\"direction\"\r\n    [color]=\"color\"\r\n    [thick]=\"thick\"\r\n></ng-progress-bar>`,\r\n  styles: [`:host {\n  z-index: 999999;\n  pointer-events: none;\n  position: relative; }\n`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NgProgressComponent implements OnChanges {\r\n\r\n  /** Progress options  */\r\n  @Input() ease = 'linear';\r\n  @Input() meteor = true;\r\n  @Input() spinner = true;\r\n  @Input() spinnerPosition = 'right';\r\n  @Input() direction = 'leftToRightIncreased';\r\n  @Input() color = '#1B95E0';\r\n  @Input() thick = false;\r\n  @Input() maximum = 1;\r\n  @Input() minimum = 0.08;\r\n  @Input() speed = 200;\r\n  @Input() trickleSpeed = 300;\r\n\r\n  /** Start/Stop Progressbar */\r\n  @Input('toggle') set toggleProgressbar(toggle: boolean) {\r\n    toggle ? this.progress.start() : this.progress.done();\r\n  }\r\n\r\n  constructor(public progress: NgProgress) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n\r\n    const minChng = changes.minimum;\r\n    const maxChng = changes.maximum;\r\n    const spdChng = changes.speed;\r\n    const tklSpdChng = changes.trickleSpeed;\r\n\r\n    if (minChng) {\r\n      if (typeof minChng.currentValue !== 'undefined' && minChng.currentValue !== minChng.previousValue) {\r\n        if (minChng.currentValue < 0 || minChng.currentValue > 1) {\r\n          throw new Error('Input [minimum] must be between 0 and 1');\r\n        } else {\r\n          this.progress.minimum = minChng.currentValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (maxChng) {\r\n      if (typeof maxChng.currentValue !== 'undefined' && maxChng.currentValue !== maxChng.previousValue) {\r\n        if (maxChng.currentValue < 0 || maxChng.currentValue > 1) {\r\n          throw new Error('Input [maximum] must be between 0 and 1');\r\n        } else {\r\n          this.progress.maximum = maxChng.currentValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (spdChng) {\r\n      if (typeof spdChng.currentValue !== 'undefined' && spdChng.currentValue !== spdChng.previousValue) {\r\n        this.progress.speed = spdChng.currentValue;\r\n      }\r\n    }\r\n\r\n    if (tklSpdChng) {\r\n      if (typeof tklSpdChng.currentValue !== 'undefined' && tklSpdChng.currentValue !== tklSpdChng.previousValue) {\r\n        this.progress.trickleSpeed = tklSpdChng.currentValue;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
    "import { Component, Input, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\nimport { NgProgressState } from '../../models/ng-progress.state';\r\nimport { NgProgress } from '../../services/ng-progress.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface ProgressBarState {\r\n  containerClasses: any;\r\n  progressStyles: any;\r\n  meteorStyles?: any;\r\n  spinnerClasses?: any;\r\n  spinnerStyles?: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'ng-progress-bar',\r\n  template: `<div class=\"ng-progress\" *ngIf=\"state$ | async; let state\" [ngClass]=\"state.containerClasses\">\r\n  <div class=\"bar\" [ngStyle]=\"state.progressStyles\">\r\n    <div *ngIf=\"meteor\" class=\"meteor\" [ngStyle]=\"state.meteorStyles\"></div>\r\n  </div>\r\n  <div *ngIf=\"spinner\" class=\"spinner {{state.spinnerClasses}}\">\r\n    <div class=\"spinner-icon\" [ngStyle]=\"state.spinnerStyles\"></div>\r\n  </div> \r\n</div>\r\n`,\r\n  styles: [`.ng-progress {\n  z-index: 999999;\n  top: 0;\n  left: 0;\n  width: 100%;\n  position: fixed;\n  zoom: 1;\n  filter: alpha(opacity=0);\n  opacity: 0;\n  -webkit-transition: opacity 200ms linear;\n  transition: opacity 200ms linear; }\n\n.active {\n  filter: alpha(opacity=100);\n  opacity: 1;\n  -webkit-transition: none;\n  transition: none; }\n\n.bar {\n  position: absolute;\n  width: 100%;\n  height: 2px; }\n\n.thick .bar {\n  height: 3px; }\n\n.meteor {\n  display: block;\n  position: absolute;\n  right: 0;\n  top: -3px;\n  width: 100px;\n  height: 100%;\n  opacity: 1.0; }\n\n.thick .meteor {\n  top: -4px; }\n\n.thick .spinner-icon {\n  width: 24px;\n  height: 24px;\n  border: solid 3px transparent; }\n\n.spinner {\n  display: block;\n  position: fixed;\n  z-index: 1031;\n  top: 15px;\n  right: 15px; }\n  .spinner.spinner-left {\n    left: 15px;\n    right: unset; }\n\n.spinner-icon {\n  width: 18px;\n  height: 18px;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  border: solid 2px transparent;\n  border-radius: 50%;\n  -webkit-animation: nprogress-spinner 400ms linear infinite;\n          animation: nprogress-spinner 400ms linear infinite; }\n\n.anti-clockwise .spinner-icon {\n  animation-direction: reverse; }\n\n@-webkit-keyframes nprogress-spinner {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n@keyframes nprogress-spinner {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgProgressBarComponent implements OnInit {\r\n\r\n  @Input() ease: string;\r\n  @Input() speed: number;\r\n  @Input() meteor: boolean;\r\n  @Input() spinner: boolean;\r\n  @Input() spinnerPosition: string;\r\n  @Input() direction: string;\r\n  @Input() thick: string;\r\n  @Input() color: string;\r\n\r\n  state$: Observable<ProgressBarState>;\r\n\r\n  constructor(public progress: NgProgress) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.state$ = this.progress.state$.pipe(\r\n      map((state: NgProgressState) => ({\r\n        containerClasses: this.containerClasses(state),\r\n        progressStyles: this.progressBarStyles(state),\r\n        spinnerClasses: this.spinnerClasses(),\r\n        spinnerStyles: this.spinnerStyles(),\r\n        meteorStyles: this.meteor ? this.meteorStyles() : null\r\n      })));\r\n  }\r\n\r\n  private containerClasses(state: NgProgressState) {\r\n    return {\r\n      active: state.active,\r\n      thick: this.thick\r\n    };\r\n  }\r\n\r\n  private progressBarStyles(state: NgProgressState) {\r\n\r\n    const n = (!state.value) ? directionSwitcher[this.direction].bar : this.toPercentage(state.value);\r\n    const translate3d = `translate3d(${n}%,0,0)`;\r\n    return {\r\n      transition: `all ${this.speed}ms ${this.ease}`,\r\n      background: this.color,\r\n      msTransform: translate3d,\r\n      webkitTransform: translate3d,\r\n      transform: translate3d\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Styles for progressbar tail\r\n   */\r\n  private meteorStyles() {\r\n    return {\r\n      boxShadow: `0 0 10px ${this.color}, 0 0 5px ${this.color}`,\r\n      left: directionSwitcher[this.direction].meteorLeft,\r\n      transform: directionSwitcher[this.direction].meteorRotate(this.thick),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Convert number to percent\r\n   * @param n - State value\r\n   */\r\n  private toPercentage(n: number) {\r\n    return directionSwitcher[this.direction].toPercentage(n) * 100;\r\n  }\r\n\r\n  /**\r\n   * Spinner direction\r\n   */\r\n  private spinnerClasses() {\r\n    return directionSwitcher[this.direction].spinnerClass + ' spinner-' + this.spinnerPosition;\r\n  }\r\n\r\n  /**\r\n   * Spinner styles\r\n   */\r\n  private spinnerStyles() {\r\n    return {\r\n      borderTopColor: this.color,\r\n      borderLeftColor: this.color\r\n    };\r\n  }\r\n\r\n}\r\n\r\nconst directionSwitcher = {\r\n  leftToRightIncreased: {\r\n    bar: -100,\r\n    toPercentage: n => -1 + n,\r\n    spinnerClass: 'clockwise',\r\n    meteorRotate: thick => `rotate(${thick ? 4 : 3}deg)`,\r\n    meteorLeft: 'unset'\r\n  },\r\n  leftToRightReduced: {\r\n    bar: 0,\r\n    toPercentage: n => -n,\r\n    spinnerClass: 'anti-clockwise',\r\n    meteorRotate: thick => `rotate(${thick ? 4 : 3}deg)`,\r\n    meteorLeft: 'unset'\r\n  },\r\n  rightToLeftIncreased: {\r\n    bar: 100,\r\n    toPercentage: n => 1 - n,\r\n    spinnerClass: 'anti-clockwise',\r\n    meteorRotate: thick => `rotate(${thick ? -4 : -3}deg)`,\r\n    meteorLeft: 0\r\n  },\r\n  rightToLeftReduced: {\r\n    bar: 0,\r\n    toPercentage: (n) => n,\r\n    spinnerClass: 'clockwise',\r\n    meteorRotate: thick => `rotate(${thick ? -4 : -3}deg)`,\r\n    meteorLeft: 0\r\n  }\r\n};\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { filter, map, distinctUntilChanged, skip, takeWhile, tap, switchMap } from 'rxjs/operators';\r\n\r\nimport { NgProgressState } from '../models/ng-progress.state';\r\n\r\n/**\r\n * Keep value within the range\r\n */\r\nconst clamp = (n, min, max) => {\r\n  if (n < min) {\r\n    return min;\r\n  }\r\n  if (n > max) {\r\n    return max;\r\n  }\r\n  return n;\r\n};\r\n\r\n@Injectable()\r\nexport class NgProgress {\r\n\r\n  /** Initial state */\r\n  initState: NgProgressState = {\r\n    active: false,\r\n    value: 0\r\n  };\r\n\r\n  /** Progress state */\r\n  state$ = new BehaviorSubject(this.initState);\r\n\r\n  /** Trickling stream */\r\n  trickling$ = new Subject();\r\n\r\n  progress = 0;\r\n  maximum = 1;\r\n  minimum = 0.08;\r\n  speed = 200;\r\n  trickleSpeed = 300;\r\n\r\n  /** Is progress started */\r\n  get isStarted(): boolean {\r\n    return this.progress > 0 && this.progress < this.maximum;\r\n  }\r\n\r\n  /** Progress start event */\r\n  get started(): Observable<boolean> {\r\n    return this.state$.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => active)\r\n    );\r\n  }\r\n\r\n  /** Progress ended event */\r\n  get ended(): Observable<boolean> {\r\n    return this.state$.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => !active),\r\n      skip(1)\r\n    );\r\n  }\r\n\r\n  constructor() {\r\n\r\n    this.trickling$.pipe(\r\n      switchMap(() => timer(0, this.trickleSpeed).pipe(\r\n        takeWhile(() => this.isStarted),\r\n        tap(() => this.inc()))\r\n      )\r\n    ).subscribe();\r\n  }\r\n\r\n  /** Start */\r\n  start() {\r\n    if (!this.isStarted) {\r\n      this.set(this.minimum);\r\n    }\r\n    this.trickling$.next();\r\n  }\r\n\r\n  /** Done */\r\n  done() {\r\n    /** if started, complete the progress */\r\n    if (this.isStarted) {\r\n      this.set(.3 + .5 * Math.random());\r\n      this.set(this.maximum);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Increment the progress\r\n   * @param amount\r\n   */\r\n  inc(amount?: number) {\r\n    let n = this.progress;\r\n    /** if it hasn't start, start */\r\n    if (!this.isStarted) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        if (n >= 0 && n < 0.2) {\r\n          amount = 0.1;\r\n        } else if (n >= 0.2 && n < 0.5) {\r\n          amount = 0.04;\r\n        } else if (n >= 0.5 && n < 0.8) {\r\n          amount = 0.02;\r\n        } else if (n >= 0.8 && n < 0.99) {\r\n          amount = 0.005;\r\n        } else {\r\n          amount = 0;\r\n        }\r\n      }\r\n      n = clamp(n + amount, 0, 0.994);\r\n      this.set(n);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the progress\r\n   * @param n - Progress value\r\n   */\r\n  set(n: number) {\r\n    this.progress = clamp(n, this.minimum, this.maximum);\r\n    this.updateState(this.progress, true);\r\n\r\n    /** if progress completed */\r\n    if (n === this.maximum) {\r\n      const hide = () => {\r\n        /**\r\n         *  reset the progress\r\n         *  Keep it { 0, false } to fadeOut progress-bar after complete\r\n         */\r\n        if (this.progress >= this.maximum) {\r\n          this.progress = 0;\r\n          this.updateState(this.progress, false);\r\n        }\r\n      };\r\n      const complete = () => {\r\n        /**\r\n         * complete the progress\r\n         * { 1, false } to complete progress-bar before hiding\r\n         */\r\n        if (this.progress >= this.maximum) {\r\n          this.updateState(this.progress, false);\r\n          setTimeout(hide, this.speed);\r\n        }\r\n      };\r\n      setTimeout(complete, this.speed);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update progress state\r\n   * @param progress - Progress value\r\n   * @param isActive - Progress active\r\n   */\r\n  private updateState(progress: number, isActive: boolean) {\r\n    this.state$.next({\r\n      active: isActive,\r\n      value: progress\r\n    });\r\n  }\r\n}\r\n"
  ],
  "names": [
    "timer",
    "Subject",
    "BehaviorSubject"
  ],
  "mappings": ";;;;;;;;;;;AGAA;;;AAYA,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,KAA1B;IACE,IAAI,CAAC,GAAG,GAAG,EAAE;QACX,OAAO,GAAG,CAAC;KACZ;IACD,IAAI,CAAC,GAAG,GAAG,EAAE;QACX,OAAO,GAAG,CAAC;KACZ;IACD,OAAO,CAAC,CAAC;CACV,CAAC;AAGF,MAAA,UAAA,CAAA;IA4CE,WAAF,GAAA;;;;QAzCA,IAAA,CAAA,SAAA,GAA+B;YAC3B,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,CAAC;SACT,CAAH;;;;QAGA,IAAA,CAAA,MAAA,GAAW,IAAIE,iBAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAA9C;;;;QAGA,IAAA,CAAA,UAAA,GAAe,IAAID,SAAO,EAAE,CAA5B;QAEA,IAAA,CAAA,QAAA,GAAa,CAAC,CAAd;QACA,IAAA,CAAA,OAAA,GAAY,CAAC,CAAb;QACA,IAAA,CAAA,OAAA,GAAY,IAAI,CAAhB;QACA,IAAA,CAAA,KAAA,GAAU,GAAG,CAAb;QACA,IAAA,CAAA,YAAA,GAAiB,GAAG,CAApB;QA4BI,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,SAAS,CAAC,MAAMD,OAAK,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAC9C,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,EAC/B,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACvB,CACF,CAAC,SAAS,EAAE,CAAC;KACf;;;;;IA/BD,IAAI,SAAS,GAAf;QACI,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;KAC1D;;;;;IAGD,IAAI,OAAO,GAAb;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,GAAG,CAAC,CAAC,KAAsB,KAAK,KAAK,CAAC,MAAM,CAAC,EAC7C,oBAAoB,EAAE,EACtB,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CACzB,CAAC;KACH;;;;;IAGD,IAAI,KAAK,GAAX;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,GAAG,CAAC,CAAC,KAAsB,KAAK,KAAK,CAAC,MAAM,CAAC,EAC7C,oBAAoB,EAAE,EACtB,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,EACzB,IAAI,CAAC,CAAC,CAAC,CACR,CAAC;KACH;;;;;IAaD,KAAK,GAAP;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;;;;;IAGD,IAAI,GAAN;;QAEI,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAClC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB;KACF;;;;;;IAMD,GAAG,CAAC,MAAe,EAArB;QACI,qBAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;;QAEtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;aAAM;YACL,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;oBACrB,MAAM,GAAG,GAAG,CAAC;iBACd;qBAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE;oBAC9B,MAAM,GAAG,IAAI,CAAC;iBACf;qBAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE;oBAC9B,MAAM,GAAG,IAAI,CAAC;iBACf;qBAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE;oBAC/B,MAAM,GAAG,KAAK,CAAC;iBAChB;qBAAM;oBACL,MAAM,GAAG,CAAC,CAAC;iBACZ;aACF;YACD,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACb;KACF;;;;;;IAMD,GAAG,CAAC,CAAS,EAAf;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;QAGtC,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,EAAE;YACtB,uBAAM,IAAI,GAAG,MAAnB;;;;;gBAKQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;oBACjC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;oBAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;iBACxC;aACF,CAAC;YACF,uBAAM,QAAQ,GAAG,MAAvB;;;;;gBAKQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;oBACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;oBACvC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC9B;aACF,CAAC;YACF,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAClC;KACF;;;;;;;IAOO,WAAW,CAAC,QAAgB,EAAE,QAAiB,EAAzD;QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,QAAQ;SAChB,CAAC,CAAC;;;;IA/IP,EAAA,IAAA,EAAC,UAAU,EAAX;;;;;;;;;ADtBA;;;;AA6GA,MAAA,sBAAA,CAAA;;;;IAaE,WAAF,CAAqB,QAAoB,EAAzC;QAAqB,IAArB,CAAA,QAA6B,GAAR,QAAQ,CAAY;KACtC;;;;IAED,QAAQ,GAAV;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CACrC,GAAG,CAAC,CAAC,KAAsB,MAAM;YAC/B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAC9C,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC7C,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE;YACrC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE;YACnC,YAAY,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI;SACvD,CAAC,CAAC,CAAC,CAAC;KACR;;;;;IAEO,gBAAgB,CAAC,KAAsB,EAAjD;QACI,OAAO;YACL,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;;;;;;IAGI,iBAAiB,CAAC,KAAsB,EAAlD;QAEI,uBAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClG,uBAAM,WAAW,GAAG,CAAxB,YAAA,EAAuC,CAAC,CAAxC,MAAA,CAAgD,CAAC;QAC7C,OAAO;YACL,UAAU,EAAE,CAAlB,IAAA,EAAyB,IAAI,CAAC,KAAK,CAAnC,GAAA,EAAyC,IAAI,CAAC,IAAI,CAAlD,CAAoD;YAC9C,UAAU,EAAE,IAAI,CAAC,KAAK;YACtB,WAAW,EAAE,WAAW;YACxB,eAAe,EAAE,WAAW;YAC5B,SAAS,EAAE,WAAW;SACvB,CAAC;;;;;;IAMI,YAAY,GAAtB;QACI,OAAO;YACL,SAAS,EAAE,CAAjB,SAAA,EAA6B,IAAI,CAAC,KAAK,CAAvC,UAAA,EAAoD,IAAI,CAAC,KAAK,CAA9D,CAAgE;YAC1D,IAAI,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,UAAU;YAClD,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;SACtE,CAAC;;;;;;;IAOI,YAAY,CAAC,CAAS,EAAhC;QACI,OAAO,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;;;;;;IAMzD,cAAc,GAAxB;QACI,OAAO,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,GAAG,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;;;;;;IAMrF,aAAa,GAAvB;QACI,OAAO;YACL,cAAc,EAAE,IAAI,CAAC,KAAK;YAC1B,eAAe,EAAE,IAAI,CAAC,KAAK;SAC5B,CAAC;;;;IA/KN,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE,CAAZ;;;;;;;;AAQA,CAAC;gBACC,MAAM,EAAE,CAAC,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA,CAAC,CAAC;gBACA,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAD,EAAA;;;;IA1GA,EAAA,IAAA,EAAS,UAAU,GAAnB;;;IA6GA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;;AA+EA,MAAA,EAAA,GAAkB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;MAA7B,EAAA,GAEkB,KAAK,IAAI,CAF3B,OAAA,EAEqC,KAAK,GAAG,CAAC,GAAG,CAAC,CAFlD,IAAA,CAEwD;MAFxD,EAAA,GAOkB,CAAC,IAAI,CAAC,CAAC;MAPzB,EAAA,GASkB,KAAK,IAAI,CAT3B,OAAA,EASqC,KAAK,GAAG,CAAC,GAAG,CAAC,CATlD,IAAA,CASwD;MATxD,EAAA,GAckB,CAAC,IAAI,CAAC,GAAG,CAAC;MAd5B,EAAA,GAgBkB,KAAK,IAAI,CAhB3B,OAAA,EAgBqC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAhBpD,IAAA,CAgB0D;MAhB1D,EAAA,GAqBkB,CAAC,CAAC,KAAK,CAAC;MArB1B,EAAA,GAuBkB,KAAK,IAAI,CAvB3B,OAAA,EAuBqC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAvBpD,IAAA,CAuB0D,CAvB1D;AAHA,MAAM,iBAAiB,GAAG;IACxB,oBAAoB,EAAE;QACpB,GAAG,EAAE,CAAC,GAAG;QACT,YAAY,EAAhB,EAA6B;QACzB,YAAY,EAAE,WAAW;QACzB,YAAY,EAAhB,EAAwD;QACpD,UAAU,EAAE,OAAO;KACpB;IACD,kBAAkB,EAAE;QAClB,GAAG,EAAE,CAAC;QACN,YAAY,EAAhB,EAAyB;QACrB,YAAY,EAAE,gBAAgB;QAC9B,YAAY,EAAhB,EAAwD;QACpD,UAAU,EAAE,OAAO;KACpB;IACD,oBAAoB,EAAE;QACpB,GAAG,EAAE,GAAG;QACR,YAAY,EAAhB,EAA4B;QACxB,YAAY,EAAE,gBAAgB;QAC9B,YAAY,EAAhB,EAA0D;QACtD,UAAU,EAAE,CAAC;KACd;IACD,kBAAkB,EAAE;QAClB,GAAG,EAAE,CAAC;QACN,YAAY,EAAhB,EAA0B;QACtB,YAAY,EAAE,WAAW;QACzB,YAAY,EAAhB,EAA0D;QACtD,UAAU,EAAE,CAAC;KACd;CACF;;;;;;AD/ND,AAuBA,MAAA,mBAAA,CAAA;;;;IAoBE,WAAF,CAAqB,QAAoB,EAAzC;QAAqB,IAArB,CAAA,QAA6B,GAAR,QAAQ,CAAY;;;;QAjBzC,IAAA,CAAA,IAAA,GAAkB,QAAQ,CAA1B;QACA,IAAA,CAAA,MAAA,GAAoB,IAAI,CAAxB;QACA,IAAA,CAAA,OAAA,GAAqB,IAAI,CAAzB;QACA,IAAA,CAAA,eAAA,GAA6B,OAAO,CAApC;QACA,IAAA,CAAA,SAAA,GAAuB,sBAAsB,CAA7C;QACA,IAAA,CAAA,KAAA,GAAmB,SAAS,CAA5B;QACA,IAAA,CAAA,KAAA,GAAmB,KAAK,CAAxB;QACA,IAAA,CAAA,OAAA,GAAqB,CAAC,CAAtB;QACA,IAAA,CAAA,OAAA,GAAqB,IAAI,CAAzB;QACA,IAAA,CAAA,KAAA,GAAmB,GAAG,CAAtB;QACA,IAAA,CAAA,YAAA,GAA0B,GAAG,CAA7B;KAQG;;;;;;IALH,IAAuB,iBAAiB,CAAC,MAAe,EAAxD;QACI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;;;;;;IAMxD,WAAW,CAAC,OAAsB,EAApC;QAEI,uBAAM,OAAO,GAAG,OAAO,CAA3B,SAAA,CAAmC,CAAC;QAChC,uBAAM,OAAO,GAAG,OAAO,CAA3B,SAAA,CAAmC,CAAC;QAChC,uBAAM,OAAO,GAAG,OAAO,CAA3B,OAAA,CAAiC,CAAC;QAC9B,uBAAM,UAAU,GAAG,OAAO,CAA9B,cAAA,CAA2C,CAAC;QAExC,IAAI,OAAO,EAAE;YACX,IAAI,OAAO,OAAO,CAAC,YAAY,KAAK,WAAW,IAAI,OAAO,CAAC,YAAY,KAAK,OAAO,CAAC,aAAa,EAAE;gBACjG,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC,EAAE;oBACxD,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;iBAC5D;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC;iBAC9C;aACF;SACF;QAED,IAAI,OAAO,EAAE;YACX,IAAI,OAAO,OAAO,CAAC,YAAY,KAAK,WAAW,IAAI,OAAO,CAAC,YAAY,KAAK,OAAO,CAAC,aAAa,EAAE;gBACjG,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC,EAAE;oBACxD,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;iBAC5D;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC;iBAC9C;aACF;SACF;QAED,IAAI,OAAO,EAAE;YACX,IAAI,OAAO,OAAO,CAAC,YAAY,KAAK,WAAW,IAAI,OAAO,CAAC,YAAY,KAAK,OAAO,CAAC,aAAa,EAAE;gBACjG,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;aAC5C;SACF;QAED,IAAI,UAAU,EAAE;YACd,IAAI,OAAO,UAAU,CAAC,YAAY,KAAK,WAAW,IAAI,UAAU,CAAC,YAAY,KAAK,UAAU,CAAC,aAAa,EAAE;gBAC1G,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;aACtD;SACF;KACF;;;IAjFH,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,CAAZ;;;;;;;;;mBASA,CAAoB;gBAClB,MAAM,EAAE,CAAC,CAAX;;;;AAIA,CAAC,CAAC;gBACA,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAD,EAAA;;;;IApBA,EAAA,IAAA,EAAS,UAAU,GAAnB;;;IAyBA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,iBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IACA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,EAAA;IAGA,mBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,QAAQ,EAAjB,EAAA,EAAA;;;;;;;ADvCA,AAcA,MAAA,gBAAA,CAAA;;;;IACE,OAAO,OAAO,GAAhB;QACI,OAAO;YACL,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE,CAAC,UAAU,CAAC;SACxB,CAAC;KACH;;;IAdH,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,YAAY,EAAE;oBACZ,mBAAmB;oBACnB,sBAAsB;iBACvB;gBACD,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,OAAO,EAAE,CAAC,YAAY,CAAC;aACxB,EAAD,EAAA;;;;;;;;;;;;;;;;;;;;"
}
