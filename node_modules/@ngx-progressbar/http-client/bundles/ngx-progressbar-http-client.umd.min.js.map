{
  "version": 3,
  "file": "ngx-progressbar-http-client.umd.min.js",
  "sources": [
    "ng://@ngx-progressbar/http-client/src/ng-progress.interceptor.ts",
    "ng://@ngx-progressbar/http-client/src/ng-progress-http-client.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NgProgress } from '@ngx-progressbar/core';\r\n\r\n@Injectable()\r\nexport class NgProgressInterceptor implements HttpInterceptor {\r\n\r\n  private inProgressCount = 0;\r\n\r\n  constructor(public progress: NgProgress) {\r\n  }\r\n\r\n  // Ignoring specific requests will be supported after this https://github.com/angular/angular/issues/18155\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.inProgressCount++;\r\n    if (!this.progress.isStarted) {\r\n      this.progress.start();\r\n    }\r\n    return next.handle(req).pipe(finalize(() => {\r\n      this.inProgressCount--;\r\n      if (this.inProgressCount === 0) {\r\n        this.progress.done();\r\n      }\r\n    }));\r\n  }\r\n}\r\n",
    "import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgProgressInterceptor } from './ng-progress.interceptor';\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }\r\n  ],\r\n})\r\nexport class NgProgressHttpClientModule {}\r\n"
  ],
  "names": [
    "this",
    "progress",
    "inProgressCount",
    "_this",
    "isStarted",
    "start",
    "next",
    "handle",
    "req",
    "pipe",
    "finalize",
    "done",
    "NgProgressInterceptor",
    "decorators",
    "ctorParameters",
    "NgProgressHttpClientModule",
    "type",
    "NgModule",
    "args",
    "providers"
  ],
  "mappings": "+jBAWAA,KAAAC,SAAyCA,EAApBD,KAArBE,gBAAA,6CAIA,IAAAC,EAAAH,KAKI,OAJAA,KAAKE,kBACAF,KAAKC,SAASG,WACjBJ,KAAKC,SAASI,QAETC,EAAKC,OAAOC,GAAKC,KAAKC,EAAAA,SAAS,WACpCP,EAAND,kBACoC,IAA1BC,EAAVD,iBACQC,EAARF,SAAAU,gBAjBAC,EAAWC,iCAFXD,EAAmBE,eAAnB,WAAA,6BCJA,IAAAC,EAAA,WAIA,oBAJA,GAMAA,EAAAF,aACAG,KAAAC,EAAAA,SAAAC,OACAC"
}
