{
  "version": 3,
  "file": "ngx-progressbar-http-client.umd.js",
  "sources": [
    "ng://@ngx-progressbar/http-client/src/ng-progress-http-client.module.ts",
    "ng://@ngx-progressbar/http-client/src/ng-progress.interceptor.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgProgressInterceptor } from './ng-progress.interceptor';\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }\r\n  ],\r\n})\r\nexport class NgProgressHttpClientModule {}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NgProgress } from '@ngx-progressbar/core';\r\n\r\n@Injectable()\r\nexport class NgProgressInterceptor implements HttpInterceptor {\r\n\r\n  private inProgressCount = 0;\r\n\r\n  constructor(public progress: NgProgress) {\r\n  }\r\n\r\n  // Ignoring specific requests will be supported after this https://github.com/angular/angular/issues/18155\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.inProgressCount++;\r\n    if (!this.progress.isStarted) {\r\n      this.progress.start();\r\n    }\r\n    return next.handle(req).pipe(finalize(() => {\r\n      this.inProgressCount--;\r\n      if (this.inProgressCount === 0) {\r\n        this.progress.done();\r\n      }\r\n    }));\r\n  }\r\n}\r\n"
  ],
  "names": [
    "NgModule",
    "finalize"
  ],
  "mappings": ";;;;;;;;;;;;;;;QCWA,IAAA,CAAA,QAAA,GAAyC,QAAzC,CAAA;QAAqB,IAArB,CAAA,eAAA,GAAA,CAA6B,CAAY;KAFzC;;;;;;;QAMA,IAAA,KAAiC,GAAjC,IAAA,CAAA;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;SACvB;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAACC,kBAAQ,CAAC,YAA1C;YACM,KAAK,CAAX,eAAA,EAA6B,CAA7B;YACM,IAAI,KAAK,CAAf,eAAA,KAAoC,CAApC,EAAA;gBACQ,KAAK,CAAb,QAAsB,CAAtB,IAAA,EAA6B,CAA7B;aACO;SACF,CAAC,CAAC,CAAC;KACL,CAAH;;;AApBA,qBAAA,CAAW,UAAX,GAAA;;;;AAFA,qBAAA,CAAmB,cAAnB,GAAA,YAAA,EAAA,OAAA;;;;;;;ADJA,IAAA,0BAAA,IAAA,YAAA;;;IAIA,OAAA,0BAAA,CAAA;CACA,EAAA,CAAA,CAAA;AACA,0BAAA,CAAA,UAAA,GAAA;IACA,EAAA,IAAA,EAAAD,aAAA,EAAA,IAAA,EAAA,CAAA;gBACA,SAAA,EAAA;;;;;;;;;;;;;;;;;;;"
}
