(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common/http'), require('rxjs/operators'), require('@ngx-progressbar/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common/http', 'rxjs/operators', '@ngx-progressbar/core'], factory) :
	(factory((global['ngx-progressbar'] = global['ngx-progressbar'] || {}, global['ngx-progressbar']['http-client'] = {}),global.ng.core,global.ng.common.http,global.Rx.Observable.prototype,global['@ngx-progressbar/core']));
}(this, (function (exports,core,http,operators,core$1) { 'use strict';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NgProgressInterceptor = (function () {
    /**
     * @param {?} progress
     */
    function NgProgressInterceptor(progress) {
        this.progress = progress;
        this.inProgressCount = 0;
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    NgProgressInterceptor.prototype.intercept = function (req, next) {
        var _this = this;
        this.inProgressCount++;
        if (!this.progress.isStarted) {
            this.progress.start();
        }
        return next.handle(req).pipe(operators.finalize(function () {
            _this.inProgressCount--;
            if (_this.inProgressCount === 0) {
                _this.progress.done();
            }
        }));
    };
    return NgProgressInterceptor;
}());
NgProgressInterceptor.decorators = [
    { type: core.Injectable },
];
/** @nocollapse */
NgProgressInterceptor.ctorParameters = function () { return [
    { type: core$1.NgProgress, },
]; };
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NgProgressHttpClientModule = (function () {
    function NgProgressHttpClientModule() {
    }
    return NgProgressHttpClientModule;
}());
NgProgressHttpClientModule.decorators = [
    { type: core.NgModule, args: [{
                providers: [
                    { provide: http.HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }
                ],
            },] },
];
/** @nocollapse */
NgProgressHttpClientModule.ctorParameters = function () { return []; };

exports.NgProgressHttpClientModule = NgProgressHttpClientModule;
exports.Éµa = NgProgressInterceptor;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-progressbar-http-client.umd.js.map
