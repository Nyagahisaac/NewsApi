import { Injectable, NgModule } from '@angular/core';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { finalize } from 'rxjs/operators';
import { NgProgress } from '@ngx-progressbar/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgProgressInterceptor {
    /**
     * @param {?} progress
     */
    constructor(progress) {
        this.progress = progress;
        this.inProgressCount = 0;
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    intercept(req, next) {
        this.inProgressCount++;
        if (!this.progress.isStarted) {
            this.progress.start();
        }
        return next.handle(req).pipe(finalize(() => {
            this.inProgressCount--;
            if (this.inProgressCount === 0) {
                this.progress.done();
            }
        }));
    }
}
NgProgressInterceptor.decorators = [
    { type: Injectable },
];
/** @nocollapse */
NgProgressInterceptor.ctorParameters = () => [
    { type: NgProgress, },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class NgProgressHttpClientModule {
}
NgProgressHttpClientModule.decorators = [
    { type: NgModule, args: [{
                providers: [
                    { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }
                ],
            },] },
];
/** @nocollapse */
NgProgressHttpClientModule.ctorParameters = () => [];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { NgProgressHttpClientModule, NgProgressInterceptor as Éµa };
//# sourceMappingURL=ngx-progressbar-http-client.js.map
